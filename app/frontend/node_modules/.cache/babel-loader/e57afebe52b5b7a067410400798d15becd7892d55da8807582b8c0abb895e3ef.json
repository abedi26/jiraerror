{"ast":null,"code":"/* eslint-disable */\nimport handlerService from \"./handlerService\";\n\n// export default VueJiraHandler.install = function (Vue, opts) {\n\n//     if (!handlerService) {\n//         throw new Error(\"handlerService is undefined. Make sure it is exported from handlerService\");\n//     }\n\n//     handlerService.initHandler(opts);\n//     Vue.config.errorHandler = (err) => handlerService.onError(err);     \n//     console.log('Options:', opts); \n\n// }\n\n// const VueJiraHandler = {\n//     install(Vue, opts) {\n//         if (!handlerService) {\n//             throw new Error(\"handlerService is undefined. Make sure it is exported from handlerService\");\n//           }\n//           handlerService.initHandler(opts);\n//           Vue.config.errorHandler = (err) => handlerService.onError(err);     \n//           console.log('Options:', opts);   \n//     }\n//   install: (Vue, { opts }) => {\n//     if (!handlerService) {\n//       throw new Error(\"handlerService is undefined. Make sure it is exported from handlerService\");\n//     }\n//     handlerService.initHandler(opts);\n//     Vue.config.errorHandler = (err) => handlerService.onError(err);     \n//     console.log('Options:', opts);      \n//   }\n// }\n\nexport default {\n  install(Vue, opts) {\n    if (!handlerService) {\n      throw new Error(\"handlerService is undefined. Make sure it is exported from handlerService\");\n    }\n    handlerService.initHandler(opts);\n    Vue.config.errorHandler = err => handlerService.onError(err);\n    console.log('Options:', opts);\n  }\n};\n\n// export default VueJiraHandler;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}